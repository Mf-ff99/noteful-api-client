{"version":3,"sources":["CircleButton/CircleButton.js","ApiContext.js","notes-helpers.js","NoteListNav/NoteListNav.js","NotePageNav/NotePageNav.js","config.js","Note/Note.js","NoteListMain/NoteListMain.js","NotePageMain/NotePageMain.js","NotefulForm/NotefulForm.js","AddFolder/AddFolder.js","AddNote/AddNote.js","App/App.js","index.js"],"names":["NavCircleButton","props","tag","className","childrenm","otherProps","Object","objectWithoutProperties","React","createElement","objectSpread","join","children","defaultProps","createContext","notes","folders","addFolder","addNote","deleteNote","findNote","arguments","length","undefined","noteId","find","note","id","NoteListNav","_this$context","this","context","_this$context$folders","_this$context$notes","react_default","a","map","folder","key","NavLink","to","concat","folderId","filter","folder_id","countNotesForFolder","name","Link","type","react_fontawesome_index_es","icon","Component","contextType","ApiContext","NotePageNav","_this","match","params","findFolder","role","onClick","history","goBack","config","API_ENDPOINT","Note","handleClickDelete","e","preventDefault","fetch","method","headers","content-type","then","_ref","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","ok","abrupt","json","Promise","reject","stop","_x","apply","onDeleteNote","catch","error","console","_this$props","modified","format","NoteListMain","notesForFolder","getNotesForFolder","Note_Note_Note","NotePageMain","handleDeleteNote","push","content","log","split","para","i","NotefulForm","assign","action","AddFolder","handleSubmit","target","value","body","JSON","stringify","NotefulForm_NotefulForm","onSubmit","htmlFor","AddNote","newNote","Date","App","state","handleAddFolder","setState","toConsumableArray","handleAddNote","_this2","all","_ref2","slicedToArray","notesRes","foldersRes","_ref3","_ref4","Fragment","path","Route","exact","component","Provider","renderNavRoutes","renderMainRoutes","library","add","faPlus","faChevronLeft","faTrashAlt","faCheckDouble","ReactDOM","render","BrowserRouter","src_App_App","document","getElementById"],"mappings":"wcAGe,SAASA,EAAgBC,GACeA,EAA7CC,IAA6CD,EAAxCE,UAAwCF,EAA7BG,UADqB,IACPC,EADOC,OAAAC,EAAA,EAAAD,CACQL,EADR,iCAG7C,OAAOO,IAAMC,cACXR,EAAMC,IADDI,OAAAI,EAAA,EAAAJ,CAAA,CAGHH,UAAW,CAAC,kBAAmBF,EAAME,WAAWQ,KAAK,MAClDN,GAELJ,EAAMW,UAIVZ,EAAgBa,aAAc,CAC5BX,IAAK,KCfQM,UAAMM,cAAc,CACjCC,MAAO,GACPC,QAAS,GACTC,UAAW,aACXC,QAAS,aACTC,WAAY,eCHDC,EAAW,eAACL,EAADM,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAO,GAAIG,EAAXH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAAA,OACtBR,EAAMU,KAAK,SAAAC,GAAI,OAAIA,EAAKC,IAAMH,KCGXI,0LAGV,IAAAC,EAC0BC,KAAKC,QAD/BC,EAAAH,EACCb,eADD,IAAAgB,EACS,GADTA,EAAAC,EAAAJ,EACad,aADb,IAAAkB,EACmB,GADnBA,EAEP,OACEC,EAAAC,EAAA1B,cAAA,OAAKN,UAAU,eACb+B,EAAAC,EAAA1B,cAAA,MAAIN,UAAU,qBACXa,EAAQoB,IAAI,SAAAC,GAAM,OACjBH,EAAAC,EAAA1B,cAAA,MAAI6B,IAAKD,EAAOV,IACdO,EAAAC,EAAA1B,cAAC8B,EAAA,EAAD,CACEpC,UAAU,2BACVqC,GAAE,WAAAC,OAAaJ,EAAOV,KAEtBO,EAAAC,EAAA1B,cAAA,QAAMN,UAAU,0BDRG,eAACY,EAADM,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAO,GAAIqB,EAAXrB,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAAA,OACjCR,EAAM4B,OAAO,SAAAjB,GAAI,OAAIA,EAAKkB,YAAcF,IAAUpB,OCQjCuB,CAAoB9B,EAAOsB,EAAOV,KAEpCU,EAAOS,UAKhBZ,EAAAC,EAAA1B,cAAA,OAAKN,UAAU,+BACb+B,EAAAC,EAAA1B,cAACT,EAAD,CACEE,IAAK6C,IACLP,GAAG,cACHQ,KAAK,SACL7C,UAAU,kCAEV+B,EAAAC,EAAA1B,cAACwC,EAAA,EAAD,CAAiBC,KAAK,SACtBhB,EAAAC,EAAA1B,cAAA,WAPF,mBAvB+BD,IAAM2C,YAA1BvB,EACZwB,YAAcC,aCFFC,mLAWV,IAAAC,EAAAzB,KAAAD,EACqBC,KAAKC,QAAzBhB,EADDc,EACCd,MAAOC,EADRa,EACQb,QACPQ,EAAWM,KAAK7B,MAAMuD,MAAMC,OAA5BjC,OAEFa,EFrBgB,eAACrB,EAADK,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAS,GAAIqB,EAAbrB,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAAA,OACxBP,EAAQS,KAAK,SAAAY,GAAM,OAAIA,EAAOV,KAAOe,IEoBpBgB,CAAW1C,GADbI,EAASL,EAAOS,IAAW,IACAoB,WACxC,OACEV,EAAAC,EAAA1B,cAAA,OAAKN,UAAU,eACb+B,EAAAC,EAAA1B,cAACT,EAAD,CACEE,IAAI,SACJyD,KAAK,OACLC,QAAS,kBAAML,EAAKtD,MAAM4D,QAAQC,UAClC3D,UAAU,4BAGV+B,EAAAC,EAAA1B,cAACwC,EAAA,EAAD,CAAiBC,KAAK,iBACtBhB,EAAAC,EAAA1B,cAAA,WARF,QAWC4B,GACCH,EAAAC,EAAA1B,cAAA,MAAIN,UAAU,4BACXkC,EAAOS,cA/BqBtC,IAAM2C,WAA1BG,EACZzC,aAAe,CACpBgD,QAAS,CACPC,OAAQ,cAEVN,MAAO,CACLC,OAAQ,KANOH,EASZF,YAAcC,uCChBRU,EAAA,CACbC,aAAc,yBCOKC,qNAMnBC,kBAAoB,SAAAC,GAClBA,EAAEC,iBACF,IAAM5C,EAAS+B,EAAKtD,MAAM0B,GAE1B0C,MAAK,GAAA5B,OAAIsB,EAAOC,aAAX,WAAAvB,OAAiCjB,GAAU,CAC9C8C,OAAQ,SACRC,QAAS,CACPC,eAAgB,sBAGjBC,KANH,eAAAC,EAAApE,OAAAqE,EAAA,EAAArE,CAAAsE,EAAAzC,EAAA0C,KAMQ,SAAAC,EAAMC,GAAN,OAAAH,EAAAzC,EAAA6C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACCJ,EAAIK,GADL,CAAAH,EAAAE,KAAA,eAAAF,EAAAI,OAAA,SAEKN,EAAIO,OAAOb,KAAK,SAAAN,GAAC,OAAIoB,QAAQC,OAAOrB,MAFzC,cAAAc,EAAAI,OAAA,kCAAAJ,EAAAQ,SAAAX,EAAAhD,SANR,gBAAA4D,GAAA,OAAAhB,EAAAiB,MAAA7D,KAAAT,YAAA,IAYGoD,KAAK,WACJlB,EAAKxB,QAAQZ,WAAWK,GAExB+B,EAAKtD,MAAM2F,aAAapE,KAEzBqE,MAAM,SAAAC,GACLC,QAAQD,MAAM,CAAEA,qFAIb,IAAAE,EACwBlE,KAAK7B,MAA5B6C,EADDkD,EACClD,KAAMnB,EADPqE,EACOrE,GAAIsE,EADXD,EACWC,SAElB,OACE/D,EAAAC,EAAA1B,cAAA,OAAKN,UAAU,QACb+B,EAAAC,EAAA1B,cAAA,MAAIN,UAAU,eACZ+B,EAAAC,EAAA1B,cAACsC,EAAA,EAAD,CAAMP,GAAE,SAAAC,OAAWd,IAChBmB,IAGLZ,EAAAC,EAAA1B,cAAA,UACEN,UAAU,eACV6C,KAAK,SACLY,QAAS9B,KAAKoC,mBAEdhC,EAAAC,EAAA1B,cAACwC,EAAA,EAAD,CAAiBC,KAAK,cACrB,IANH,UASAhB,EAAAC,EAAA1B,cAAA,OAAKN,UAAU,eACb+B,EAAAC,EAAA1B,cAAA,OAAKN,UAAU,wBAAf,WAEG,IACD+B,EAAAC,EAAA1B,cAAA,QAAMN,UAAU,QACb+F,iBAAOD,EAAU,0BAxDEzF,IAAM2C,YAAnBc,EACZpD,aAAc,CACnB+E,aAAc,cAFG3B,EAIZb,YAAcC,aCHF8C,mLAQV,IACCzD,EAAaZ,KAAK7B,MAAMuD,MAAMC,OAA9Bf,SADDT,EAEcH,KAAKC,QAAlBhB,MACFqF,ELZuB,eAACrF,EAADM,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAO,GAAIqB,EAAXrB,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAAA,OAC7BmB,EAEE3B,EAAM4B,OAAO,SAAAjB,GAAI,OAAIA,EAAKkB,WAAaF,IADvC3B,EKUqBsF,MAHhB,IAAApE,EAEO,GAFPA,EAGyCS,GAChD,OACER,EAAAC,EAAA1B,cAAA,WAASN,UAAU,gBACjB+B,EAAAC,EAAA1B,cAAA,UACG2F,EAAehE,IAAI,SAAAV,GAAI,OACtBQ,EAAAC,EAAA1B,cAAA,MAAI6B,IAAKZ,EAAKC,IACZO,EAAAC,EAAA1B,cAAC6F,EAAD,CACE3E,GAAID,EAAKC,GACTmB,KAAMpB,EAAKoB,KACXmD,SAAUvE,EAAKuE,eAKvB/D,EAAAC,EAAA1B,cAAA,OAAKN,UAAU,kCACb+B,EAAAC,EAAA1B,cAACT,EAAD,CACEE,IAAK6C,IACLP,GAAG,YACHQ,KAAK,SACL7C,UAAU,iCAEV+B,EAAAC,EAAA1B,cAACwC,EAAA,EAAD,CAAiBC,KAAK,SACtBhB,EAAAC,EAAA1B,cAAA,WAPF,iBA1BgCD,IAAM2C,WAA3BgD,EACZtF,aAAe,CACpB2C,MAAO,CACLC,OAAQ,KAHO0C,EAMZ/C,YAAcC,aCTFkD,6MASnBC,iBAAmB,SAAAhF,GACjB+B,EAAKtD,MAAM4D,QAAQ4C,KAAnB,8EAGO,IAAAxE,EACcH,KAAKC,QAAlBhB,aADD,IAAAkB,EACO,GADPA,EAECT,EAAWM,KAAK7B,MAAMuD,MAAMC,OAA5BjC,OACFE,EAAON,EAASL,EAAOS,IAAW,CAAEkF,QAAS,IAEnD,OADAX,QAAQY,IAAIjF,GAEVQ,EAAAC,EAAA1B,cAAA,WAASN,UAAU,gBACjB+B,EAAAC,EAAA1B,cAAC6F,EAAD,CACE3E,GAAID,EAAKC,GACTmB,KAAMpB,EAAKoB,KACXmD,SAAUvE,EAAKuE,SACfL,aAAc9D,KAAK0E,mBAErBtE,EAAAC,EAAA1B,cAAA,OAAKN,UAAU,yBACZuB,EAAKgF,QAAQE,MAAM,YAAYxE,IAAI,SAACyE,EAAMC,GAAP,OAClC5E,EAAAC,EAAA1B,cAAA,KAAG6B,IAAKwE,GAAID,cA5BkBrG,IAAM2C,WAA3BoD,EACZ1F,aAAe,CACpB2C,MAAO,CACLC,OAAQ,KAHO8C,EAOZnD,YAAcC,SCVR,SAAS0D,EAAY9G,GAAO,IACjCE,EAA6BF,EAA7BE,UAAcE,EADmBC,OAAAC,EAAA,EAAAD,CACJL,EADI,eAEzC,OACEiC,EAAAC,EAAA1B,cAAA,OAAAH,OAAA0G,OAAA,CACE7G,UAAW,CAAC,eAAgBA,GAAWQ,KAAK,KAC5CsG,OAAO,KACH5G,eCHW6G,6MAQnBC,aAAe,SAAAhD,GACbA,EAAEC,iBACF,IAAM/B,EAAS,CACbS,KAAMqB,EAAEiD,OAAO,eAAeC,OAEhChD,MAAK,GAAA5B,OAAIsB,EAAOC,aAAX,YAAmC,CACtCM,OAAQ,OACRC,QAAS,CACPC,eAAgB,oBAElB8C,KAAMC,KAAKC,UAAUnF,KAEpBoC,KAAK,SAAAM,GACJ,OAAKA,EAAIK,GAEFL,EAAIO,OADFP,EAAIO,OAAOb,KAAK,SAAAN,GAAC,OAAIoB,QAAQC,OAAOrB,OAG9CM,KAAK,SAAApC,GACJkB,EAAKxB,QAAQd,UAAUoB,GACvBkB,EAAKtD,MAAM4D,QAAQ4C,KAAnB,WAAAhE,OAAmCJ,EAAOV,OAE3CkE,MAAM,SAAAC,GACLC,QAAQD,MAAM,CAAEA,qFAKpB,OACE5D,EAAAC,EAAA1B,cAAA,WAASN,UAAU,aACjB+B,EAAAC,EAAA1B,cAAA,6BACAyB,EAAAC,EAAA1B,cAACgH,EAAD,CAAaC,SAAU5F,KAAKqF,cAC1BjF,EAAAC,EAAA1B,cAAA,OAAKN,UAAU,SACb+B,EAAAC,EAAA1B,cAAA,SAAOkH,QAAQ,qBAAf,QAGAzF,EAAAC,EAAA1B,cAAA,SAAOuC,KAAK,OAAOrB,GAAG,oBAAoBmB,KAAK,iBAEjDZ,EAAAC,EAAA1B,cAAA,OAAKN,UAAU,WACb+B,EAAAC,EAAA1B,cAAA,UAAQuC,KAAK,UAAb,wBA9C2BG,aAAlB+D,EACZrG,aAAe,CACpBgD,QAAS,CACP4C,KAAM,eAHSS,EAMZ9D,YAAcC,aCNFuE,6MAQnBT,aAAe,SAAAhD,GACbA,EAAEC,iBACF,IAAMyD,EAAU,CACd/E,KAAMqB,EAAEiD,OAAO,aAAaC,MAC5BX,QAASvC,EAAEiD,OAAO,gBAAgBC,MAClC3E,SAAUyB,EAAEiD,OAAO,kBAAkBC,MACrCpB,SAAU,IAAI6B,MAEhBzD,MAAK,GAAA5B,OAAIsB,EAAOC,aAAX,UAAiC,CACpCM,OAAQ,OACRC,QAAS,CACPC,eAAgB,oBAElB8C,KAAMC,KAAKC,UAAUK,KAEpBpD,KAAK,SAAAM,GACJ,OAAKA,EAAIK,GAEFL,EAAIO,OADFP,EAAIO,OAAOb,KAAK,SAAAN,GAAC,OAAIoB,QAAQC,OAAOrB,OAG9CM,KAAK,SAAA/C,GACJ6B,EAAKxB,QAAQb,QAAQQ,GACrB6B,EAAKtD,MAAM4D,QAAQ4C,KAAnB,WAAAhE,OAAmCf,EAAKkB,cAEzCiD,MAAM,SAAAC,GACLC,QAAQD,MAAM,CAAEA,qFAIb,IAAA9D,EACgBF,KAAKC,QAApBf,eADD,IAAAgB,EACS,GADTA,EAEP,OACEE,EAAAC,EAAA1B,cAAA,WAASN,UAAU,WACjB+B,EAAAC,EAAA1B,cAAA,2BACAyB,EAAAC,EAAA1B,cAACgH,EAAD,CAAaC,SAAU5F,KAAKqF,cAC1BjF,EAAAC,EAAA1B,cAAA,OAAKN,UAAU,SACb+B,EAAAC,EAAA1B,cAAA,SAAOkH,QAAQ,mBAAf,QAGAzF,EAAAC,EAAA1B,cAAA,SAAOuC,KAAK,OAAOrB,GAAG,kBAAkBmB,KAAK,eAE/CZ,EAAAC,EAAA1B,cAAA,OAAKN,UAAU,SACb+B,EAAAC,EAAA1B,cAAA,SAAOkH,QAAQ,sBAAf,WAGAzF,EAAAC,EAAA1B,cAAA,YAAUkB,GAAG,qBAAqBmB,KAAK,kBAEzCZ,EAAAC,EAAA1B,cAAA,OAAKN,UAAU,SACb+B,EAAAC,EAAA1B,cAAA,SAAOkH,QAAQ,sBAAf,UAGAzF,EAAAC,EAAA1B,cAAA,UAAQkB,GAAG,qBAAqBmB,KAAK,kBACnCZ,EAAAC,EAAA1B,cAAA,UAAQ4G,MAAO,MAAf,OACCrG,EAAQoB,IAAI,SAAAC,GAAM,OACjBH,EAAAC,EAAA1B,cAAA,UAAQ6B,IAAKD,EAAOV,GAAI0F,MAAOhF,EAAOV,IACnCU,EAAOS,UAKhBZ,EAAAC,EAAA1B,cAAA,OAAKN,UAAU,WACb+B,EAAAC,EAAA1B,cAAA,UAAQuC,KAAK,UAAb,sBArEyBG,aAAhByE,EACZ/G,aAAe,CACpBgD,QAAS,CACP4C,KAAM,eAHSmB,EAMZxE,YAAcC,aC4IR0E,6MA1IbC,MAAQ,CACNjH,MAAO,GACPC,QAAS,MA2BXiH,gBAAkB,SAAA5F,GAChBkB,EAAK2E,SAAS,CACZlH,QAAQV,OAAA6H,EAAA,EAAA7H,CACHiD,EAAKyE,MAAMhH,SADTyB,OAAA,CAELJ,SAKN+F,cAAgB,SAAA1G,GACd6B,EAAK2E,SAAS,CACZnH,MAAMT,OAAA6H,EAAA,EAAA7H,CACDiD,EAAKyE,MAAMjH,OADX0B,OAAA,CAEHf,SAKN8E,iBAAmB,SAAAhF,GACjBuE,QAAQY,IAAI,cAAenF,GAC3B+B,EAAK2E,SAAS,CACZnH,MAAOwC,EAAKyE,MAAMjH,MAAM4B,OAAO,SAAAjB,GAAI,OAAIA,EAAKC,KAAOH,0FA7CnC,IAAA6G,EAAAvG,KAClByD,QAAQ+C,IAAI,CACVjE,MAAK,GAAA5B,OAAIsB,EAAOC,aAAX,WACLK,MAAK,GAAA5B,OAAIsB,EAAOC,aAAX,eAEJS,KAAK,SAAAC,GAA4B,IAAA6D,EAAAjI,OAAAkI,EAAA,EAAAlI,CAAAoE,EAAA,GAA1B+D,EAA0BF,EAAA,GAAhBG,EAAgBH,EAAA,GAChC,OAAKE,EAASrD,GAETsD,EAAWtD,GAGTG,QAAQ+C,IAAI,CACjBG,EAASnD,OACToD,EAAWpD,SAJJoD,EAAWpD,OAAOb,KAAK,SAAAN,GAAC,OAAIoB,QAAQC,OAAOrB,KAF3CsE,EAASnD,OAAOb,KAAK,SAAAN,GAAC,OAAIoB,QAAQC,OAAOrB,OASnDM,KAAK,SAAAkE,GAAsB,IAAAC,EAAAtI,OAAAkI,EAAA,EAAAlI,CAAAqI,EAAA,GAApB5H,EAAoB6H,EAAA,GAAb5H,EAAa4H,EAAA,GAC1BP,EAAKH,SAAS,CAAEnH,QAAOC,cAExB6E,MAAM,SAAAC,GACLC,QAAQD,MAAM,CAAEA,sDA8BpB,OACE5D,EAAAC,EAAA1B,cAAAyB,EAAAC,EAAA0G,SAAA,KACG,CAAC,IAAK,qBAAqBzG,IAAI,SAAA0G,GAAI,OAClC5G,EAAAC,EAAA1B,cAACsI,EAAA,EAAD,CACEC,OAAK,EACL1G,IAAKwG,EACLA,KAAMA,EACNG,UAAWrH,MAGfM,EAAAC,EAAA1B,cAACsI,EAAA,EAAD,CACED,KAAK,gBACLG,UAAW3F,IAEbpB,EAAAC,EAAA1B,cAACsI,EAAA,EAAD,CACED,KAAK,cACLG,UAAW3F,IAEbpB,EAAAC,EAAA1B,cAACsI,EAAA,EAAD,CACED,KAAK,YACLG,UAAW3F,gDAOjB,OACEpB,EAAAC,EAAA1B,cAAAyB,EAAAC,EAAA0G,SAAA,KACG,CAAC,IAAK,qBAAqBzG,IAAI,SAAA0G,GAAI,OAClC5G,EAAAC,EAAA1B,cAACsI,EAAA,EAAD,CACEC,OAAK,EACL1G,IAAKwG,EACLA,KAAMA,EACNG,UAAW9C,MAGfjE,EAAAC,EAAA1B,cAACsI,EAAA,EAAD,CACED,KAAK,gBACLG,UAAW1C,IAEbrE,EAAAC,EAAA1B,cAACsI,EAAA,EAAD,CACED,KAAK,cACLG,UAAW/B,IAEbhF,EAAAC,EAAA1B,cAACsI,EAAA,EAAD,CACED,KAAK,YACLG,UAAWrB,sCAOjB,IAAMP,EAAQ,CACZtG,MAAOe,KAAKkG,MAAMjH,MAClBC,QAASc,KAAKkG,MAAMhH,QACpBC,UAAWa,KAAKmG,gBAChB/G,QAASY,KAAKsG,cACdjH,WAAYW,KAAK0E,kBAEnB,OACEtE,EAAAC,EAAA1B,cAAC4C,EAAW6F,SAAZ,CAAqB7B,MAAOA,GAC1BnF,EAAAC,EAAA1B,cAAA,OAAKN,UAAU,OACb+B,EAAAC,EAAA1B,cAAA,OAAKN,UAAU,YACZ2B,KAAKqH,mBAERjH,EAAAC,EAAA1B,cAAA,UAAQN,UAAU,eAChB+B,EAAAC,EAAA1B,cAAA,UACEyB,EAAAC,EAAA1B,cAACsC,EAAA,EAAD,CAAMP,GAAG,KAAT,WACC,IACDN,EAAAC,EAAA1B,cAACwC,EAAA,EAAD,CAAiBC,KAAK,mBAG1BhB,EAAAC,EAAA1B,cAAA,QAAMN,UAAU,aACb2B,KAAKsH,6BAnIAjG,aCFlBkG,IAAQC,IAAIC,IAAQC,IAAeC,IAAYC,KAE/CC,IAASC,OACP1H,EAAAC,EAAA1B,cAACoJ,EAAA,EAAD,KACE3H,EAAAC,EAAA1B,cAACqJ,EAAD,OAEFC,SAASC,eAAe","file":"static/js/main.260855a3.chunk.js","sourcesContent":["import React from 'react'\r\nimport './CircleButton.css'\r\n\r\nexport default function NavCircleButton(props) {\r\n  const { tag, className, childrenm, ...otherProps } = props\r\n\r\n  return React.createElement(\r\n    props.tag,\r\n    {\r\n      className: ['NavCircleButton', props.className].join(' '),\r\n      ...otherProps\r\n    },\r\n    props.children\r\n  )\r\n}\r\n\r\nNavCircleButton.defaultProps ={\r\n  tag: 'a',\r\n}\r\n","import React from 'react'\r\n\r\nexport default React.createContext({\r\n  notes: [],\r\n  folders: [],\r\n  addFolder: () => {},\r\n  addNote: () => {},\r\n  deleteNote: () => {},\r\n})\r\n","\r\nexport const findFolder = (folders=[], folderId) =>\r\n  folders.find(folder => folder.id === folderId)\r\n\r\nexport const findNote = (notes=[], noteId) => (\r\n  notes.find(note => note.id == noteId)\r\n)\r\n\r\nexport const getNotesForFolder = (notes=[], folderId) => (\r\n  (!folderId)\r\n    ? notes\r\n    : notes.filter(note => note.folder_id == folderId)\r\n)\r\n\r\nexport const countNotesForFolder = (notes=[], folderId) =>\r\n  notes.filter(note => note.folder_id === folderId).length\r\n","import React from 'react'\r\nimport { NavLink, Link } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport CircleButton from '../CircleButton/CircleButton'\r\nimport ApiContext from '../ApiContext'\r\nimport { countNotesForFolder } from '../notes-helpers'\r\nimport './NoteListNav.css'\r\n\r\nexport default class NoteListNav extends React.Component {\r\n  static contextType = ApiContext;\r\n\r\n  render() {\r\n    const { folders=[], notes=[] } = this.context\r\n    return (\r\n      <div className='NoteListNav'>\r\n        <ul className='NoteListNav__list'>\r\n          {folders.map(folder =>\r\n            <li key={folder.id}>\r\n              <NavLink\r\n                className='NoteListNav__folder-link'\r\n                to={`/folder/${folder.id}`}\r\n              >\r\n                <span className='NoteListNav__num-notes'>\r\n                  {countNotesForFolder(notes, folder.id)}\r\n                </span>\r\n                {folder.name}\r\n              </NavLink>\r\n            </li>\r\n          )}\r\n        </ul>\r\n        <div className='NoteListNav__button-wrapper'>\r\n          <CircleButton\r\n            tag={Link}\r\n            to='/add-folder'\r\n            type='button'\r\n            className='NoteListNav__add-folder-button'\r\n          >\r\n            <FontAwesomeIcon icon='plus' />\r\n            <br />\r\n            Folder\r\n          </CircleButton>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport CircleButton from '../CircleButton/CircleButton'\r\nimport ApiContext from '../ApiContext'\r\nimport { findNote, findFolder } from '../notes-helpers'\r\nimport './NotePageNav.css'\r\n\r\nexport default class NotePageNav extends React.Component {\r\n  static defaultProps = {\r\n    history: {\r\n      goBack: () => { }\r\n    },\r\n    match: {\r\n      params: {}\r\n    }\r\n  }\r\n  static contextType = ApiContext;\r\n\r\n  render() {\r\n    const { notes, folders, } = this.context\r\n    const { noteId } = this.props.match.params\r\n    const note = findNote(notes, noteId) || {}\r\n    const folder = findFolder(folders, note.folder_id)\r\n    return (\r\n      <div className='NotePageNav'>\r\n        <CircleButton\r\n          tag='button'\r\n          role='link'\r\n          onClick={() => this.props.history.goBack()}\r\n          className='NotePageNav__back-button'\r\n        >\r\n          \r\n          <FontAwesomeIcon icon='chevron-left' />\r\n          <br />\r\n          Back\r\n        </CircleButton>\r\n        {folder && (\r\n          <h3 className='NotePageNav__folder-name'>\r\n            {folder.name}\r\n          </h3>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","export default {\r\n  API_ENDPOINT: 'http://localhost:8000'\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { format } from 'date-fns'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport ApiContext from '../ApiContext'\r\nimport config from '../config'\r\nimport './Note.css'\r\n\r\nexport default class Note extends React.Component {\r\n  static defaultProps ={\r\n    onDeleteNote: () => {},\r\n  }\r\n  static contextType = ApiContext;\r\n\r\n  handleClickDelete = e => {\r\n    e.preventDefault()\r\n    const noteId = this.props.id\r\n\r\n    fetch(`${config.API_ENDPOINT}/notes/${noteId}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    })\r\n      .then(async res => {\r\n        if (!res.ok){\r\n          return res.json().then(e => Promise.reject(e))\r\n        }\r\n        return;\r\n      })\r\n      .then(() => {\r\n        this.context.deleteNote(noteId)\r\n        // allow parent to perform extra behaviour\r\n        this.props.onDeleteNote(noteId)\r\n      })\r\n      .catch(error => {\r\n        console.error({ error })\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { name, id, modified } = this.props\r\n    // console.log(`/note/${id}`)\r\n    return (\r\n      <div className='Note'>\r\n        <h2 className='Note__title'>\r\n          <Link to={`/note/${id}`}>\r\n            {name}\r\n          </Link>\r\n        </h2>\r\n        <button\r\n          className='Note__delete'\r\n          type='button'\r\n          onClick={this.handleClickDelete}\r\n        >\r\n          <FontAwesomeIcon icon='trash-alt' />\r\n          {' '}\r\n          remove\r\n        </button>\r\n        <div className='Note__dates'>\r\n          <div className='Note__dates-modified'>\r\n            Modified\r\n            {' '}\r\n            <span className='Date'>\r\n              {format(modified, 'Do MMM YYYY')}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport Note from '../Note/Note'\r\nimport CircleButton from '../CircleButton/CircleButton'\r\nimport ApiContext from '../ApiContext'\r\nimport { getNotesForFolder } from '../notes-helpers'\r\nimport './NoteListMain.css'\r\n\r\nexport default class NoteListMain extends React.Component {\r\n  static defaultProps = {\r\n    match: {\r\n      params: {}\r\n    }\r\n  }\r\n  static contextType = ApiContext\r\n\r\n  render() {\r\n    const { folderId } = this.props.match.params\r\n    const { notes=[] } = this.context\r\n    const notesForFolder = getNotesForFolder(notes, folderId)    \r\n    return (\r\n      <section className='NoteListMain'>\r\n        <ul>\r\n          {notesForFolder.map(note =>\r\n            <li key={note.id}>\r\n              <Note\r\n                id={note.id}\r\n                name={note.name}\r\n                modified={note.modified}\r\n              />\r\n            </li>\r\n          )}\r\n        </ul>\r\n        <div className='NoteListMain__button-container'>\r\n          <CircleButton\r\n            tag={Link}\r\n            to='/add-note'\r\n            type='button'\r\n            className='NoteListMain__add-note-button'\r\n          >\r\n            <FontAwesomeIcon icon='plus' />\r\n            <br />\r\n            Note\r\n          </CircleButton>\r\n        </div>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport Note from '../Note/Note'\r\nimport ApiContext from '../ApiContext'\r\nimport { findNote } from '../notes-helpers'\r\nimport './NotePageMain.css'\r\n\r\nexport default class NotePageMain extends React.Component {\r\n  static defaultProps = {\r\n    match: {\r\n      params: {}\r\n    }\r\n  }\r\n\r\n  static contextType = ApiContext\r\n\r\n  handleDeleteNote = noteId => {\r\n    this.props.history.push(`/`)\r\n  }\r\n\r\n  render() {\r\n    const { notes=[] } = this.context\r\n    const { noteId } = this.props.match.params\r\n    const note = findNote(notes, noteId) || { content: '' }\r\n    console.log(note)\r\n    return (\r\n      <section className='NotePageMain'>\r\n        <Note\r\n          id={note.id}\r\n          name={note.name}\r\n          modified={note.modified}\r\n          onDeleteNote={this.handleDeleteNote}\r\n        />\r\n        <div className='NotePageMain__content'>\r\n          {note.content.split(/\\n \\r|\\n/).map((para, i) =>\r\n            <p key={i}>{para}</p>\r\n          )}\r\n        </div>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport './NotefulForm.css'\r\n\r\nexport default function NotefulForm(props) {\r\n  const { className, ...otherProps } = props\r\n  return (\r\n    <form\r\n      className={['Noteful-form', className].join(' ')}\r\n      action='#'\r\n      {...otherProps}\r\n    />\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\nimport NotefulForm from '../NotefulForm/NotefulForm'\r\nimport ApiContext from '../ApiContext'\r\nimport config from '../config'\r\nimport './AddFolder.css'\r\n\r\nexport default class AddFolder extends Component {\r\n  static defaultProps = {\r\n    history: {\r\n      push: () => { }\r\n    },\r\n  }\r\n  static contextType = ApiContext;\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault()\r\n    const folder = {\r\n      name: e.target['folder-name'].value\r\n    }\r\n    fetch(`${config.API_ENDPOINT}/folders`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      },\r\n      body: JSON.stringify(folder),\r\n    })\r\n      .then(res => {\r\n        if (!res.ok)\r\n          return res.json().then(e => Promise.reject(e))\r\n        return res.json()\r\n      })\r\n      .then(folder => {\r\n        this.context.addFolder(folder)\r\n        this.props.history.push(`/folder/${folder.id}`)\r\n      })\r\n      .catch(error => {\r\n        console.error({ error })\r\n      })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section className='AddFolder'>\r\n        <h2>Create a folder</h2>\r\n        <NotefulForm onSubmit={this.handleSubmit}>\r\n          <div className='field'>\r\n            <label htmlFor='folder-name-input'>\r\n              Name\r\n            </label>\r\n            <input type='text' id='folder-name-input' name='folder-name' />\r\n          </div>\r\n          <div className='buttons'>\r\n            <button type='submit'>\r\n              Add folder\r\n            </button>\r\n          </div>\r\n        </NotefulForm>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport NotefulForm from '../NotefulForm/NotefulForm'\r\nimport ApiContext from '../ApiContext'\r\nimport config from '../config'\r\nimport './AddNote.css'\r\n\r\nexport default class AddNote extends Component {\r\n  static defaultProps = {\r\n    history: {\r\n      push: () => { }\r\n    },\r\n  }\r\n  static contextType = ApiContext;\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault()\r\n    const newNote = {\r\n      name: e.target['note-name'].value,\r\n      content: e.target['note-content'].value,\r\n      folderId: e.target['note-folder-id'].value,\r\n      modified: new Date(),\r\n    }\r\n    fetch(`${config.API_ENDPOINT}/notes`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      },\r\n      body: JSON.stringify(newNote)\r\n    })\r\n      .then(res => {\r\n        if (!res.ok)\r\n          return res.json().then(e => Promise.reject(e))\r\n        return res.json()\r\n      })\r\n      .then(note => {\r\n        this.context.addNote(note)\r\n        this.props.history.push(`/folder/${note.folder_id}`)\r\n      })\r\n      .catch(error => {\r\n        console.error({ error })\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const { folders=[] } = this.context\r\n    return (\r\n      <section className='AddNote'>\r\n        <h2>Create a note</h2>\r\n        <NotefulForm onSubmit={this.handleSubmit}>\r\n          <div className='field'>\r\n            <label htmlFor='note-name-input'>\r\n              Name\r\n            </label>\r\n            <input type='text' id='note-name-input' name='note-name' />\r\n          </div>\r\n          <div className='field'>\r\n            <label htmlFor='note-content-input'>\r\n              Content\r\n            </label>\r\n            <textarea id='note-content-input' name='note-content' />\r\n          </div>\r\n          <div className='field'>\r\n            <label htmlFor='note-folder-select'>\r\n              Folder\r\n            </label>\r\n            <select id='note-folder-select' name='note-folder-id'>\r\n              <option value={null}>...</option>\r\n              {folders.map(folder =>\r\n                <option key={folder.id} value={folder.id}>\r\n                  {folder.name}\r\n                </option>\r\n              )}\r\n            </select>\r\n          </div>\r\n          <div className='buttons'>\r\n            <button type='submit'>\r\n              Add note\r\n            </button>\r\n          </div>\r\n        </NotefulForm>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Route, Link } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport NoteListNav from '../NoteListNav/NoteListNav'\r\nimport NotePageNav from '../NotePageNav/NotePageNav'\r\nimport NoteListMain from '../NoteListMain/NoteListMain'\r\nimport NotePageMain from '../NotePageMain/NotePageMain'\r\nimport AddFolder from '../AddFolder/AddFolder'\r\nimport AddNote from '../AddNote/AddNote'\r\nimport ApiContext from '../ApiContext'\r\nimport config from '../config'\r\nimport './App.css'\r\n\r\nclass App extends Component {\r\n  state = {\r\n    notes: [],\r\n    folders: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    Promise.all([\r\n      fetch(`${config.API_ENDPOINT}/notes`),\r\n      fetch(`${config.API_ENDPOINT}/folders`)\r\n    ])\r\n      .then(([notesRes, foldersRes]) => {\r\n        if (!notesRes.ok)\r\n          return notesRes.json().then(e => Promise.reject(e))\r\n        if (!foldersRes.ok)\r\n          return foldersRes.json().then(e => Promise.reject(e))\r\n\r\n        return Promise.all([\r\n          notesRes.json(),\r\n          foldersRes.json(),\r\n        ])\r\n      })\r\n      .then(([notes, folders]) => {\r\n        this.setState({ notes, folders })\r\n      })\r\n      .catch(error => {\r\n        console.error({ error })\r\n      })\r\n  }\r\n\r\n  handleAddFolder = folder => {\r\n    this.setState({\r\n      folders: [\r\n        ...this.state.folders,\r\n        folder\r\n      ]\r\n    })\r\n  }\r\n\r\n  handleAddNote = note => {\r\n    this.setState({\r\n      notes: [\r\n        ...this.state.notes,\r\n        note\r\n      ]\r\n    })\r\n  }\r\n\r\n  handleDeleteNote = noteId => {\r\n    console.log('this is the', noteId)\r\n    this.setState({\r\n      notes: this.state.notes.filter(note => note.id !== noteId)\r\n    })\r\n  }\r\n\r\n  renderNavRoutes() {\r\n    return (\r\n      <>\r\n        {['/', '/folder/:folderId'].map(path =>\r\n          <Route\r\n            exact\r\n            key={path}\r\n            path={path}\r\n            component={NoteListNav}\r\n          />\r\n        )}\r\n        <Route\r\n          path='/note/:noteId'\r\n          component={NotePageNav}\r\n        />\r\n        <Route\r\n          path='/add-folder'\r\n          component={NotePageNav}\r\n        />\r\n        <Route\r\n          path='/add-note'\r\n          component={NotePageNav}\r\n        />\r\n      </>\r\n    )\r\n  }\r\n\r\n  renderMainRoutes() {\r\n    return (\r\n      <>\r\n        {['/', '/folder/:folderId'].map(path =>\r\n          <Route\r\n            exact\r\n            key={path}\r\n            path={path}\r\n            component={NoteListMain}\r\n          />\r\n        )}\r\n        <Route\r\n          path='/note/:noteId'\r\n          component={NotePageMain}\r\n        />\r\n        <Route\r\n          path='/add-folder'\r\n          component={AddFolder}\r\n        />\r\n        <Route\r\n          path='/add-note'\r\n          component={AddNote}\r\n        />\r\n      </>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const value = {\r\n      notes: this.state.notes,\r\n      folders: this.state.folders,\r\n      addFolder: this.handleAddFolder,\r\n      addNote: this.handleAddNote,\r\n      deleteNote: this.handleDeleteNote,\r\n    }\r\n    return (\r\n      <ApiContext.Provider value={value}>\r\n        <div className='App'>\r\n          <nav className='App__nav'>\r\n            {this.renderNavRoutes()}\r\n          </nav>\r\n          <header className='App__header'>\r\n            <h1>\r\n              <Link to='/'>Noteful</Link>\r\n              {' '}\r\n              <FontAwesomeIcon icon='check-double' />\r\n            </h1>\r\n          </header>\r\n          <main className='App__main'>\r\n            {this.renderMainRoutes()}\r\n          </main>\r\n        </div>\r\n      </ApiContext.Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport {\r\n  faPlus, faChevronLeft, faTrashAlt, faCheckDouble\r\n} from '@fortawesome/free-solid-svg-icons'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport 'typeface-roboto'\r\nimport './index.css'\r\nimport App from './App/App'\r\n\r\nlibrary.add(faPlus, faChevronLeft, faTrashAlt, faCheckDouble)\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}